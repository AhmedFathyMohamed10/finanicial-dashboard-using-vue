{"version":3,"file":"js/648.4d0ea37a.js","mappings":"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","sources":["webpack://vue-dashboard/./node_modules/core-js/internals/call-with-safe-iteration-closing.js","webpack://vue-dashboard/./node_modules/core-js/internals/correct-prototype-getter.js","webpack://vue-dashboard/./node_modules/core-js/internals/create-iter-result-object.js","webpack://vue-dashboard/./node_modules/core-js/internals/define-built-ins.js","webpack://vue-dashboard/./node_modules/core-js/internals/get-iterator-direct.js","webpack://vue-dashboard/./node_modules/core-js/internals/html.js","webpack://vue-dashboard/./node_modules/core-js/internals/iterator-close.js","webpack://vue-dashboard/./node_modules/core-js/internals/iterator-create-proxy.js","webpack://vue-dashboard/./node_modules/core-js/internals/iterator-map.js","webpack://vue-dashboard/./node_modules/core-js/internals/iterators-core.js","webpack://vue-dashboard/./node_modules/core-js/internals/object-create.js","webpack://vue-dashboard/./node_modules/core-js/internals/object-define-properties.js","webpack://vue-dashboard/./node_modules/core-js/internals/object-get-prototype-of.js","webpack://vue-dashboard/./node_modules/core-js/internals/object-keys.js","webpack://vue-dashboard/./node_modules/core-js/modules/es.iterator.map.js","webpack://vue-dashboard/./node_modules/core-js/modules/esnext.iterator.map.js","webpack://vue-dashboard/./node_modules/@kurkle/color/dist/color.esm.js","webpack://vue-dashboard/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://vue-dashboard/./node_modules/chart.js/dist/chart.js","webpack://vue-dashboard/./node_modules/chart.js/auto/auto.js"],"sourcesContent":["'use strict';\nvar anObject = require('../internals/an-object');\nvar iteratorClose = require('../internals/iterator-close');\n\n// call something on iterator step with safe closing on error\nmodule.exports = function (iterator, fn, value, ENTRIES) {\n  try {\n    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);\n  } catch (error) {\n    iteratorClose(iterator, 'throw', error);\n  }\n};\n","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  function F() { /* empty */ }\n  F.prototype.constructor = null;\n  // eslint-disable-next-line es/no-object-getprototypeof -- required for testing\n  return Object.getPrototypeOf(new F()) !== F.prototype;\n});\n","'use strict';\n// `CreateIterResultObject` abstract operation\n// https://tc39.es/ecma262/#sec-createiterresultobject\nmodule.exports = function (value, done) {\n  return { value: value, done: done };\n};\n","'use strict';\nvar defineBuiltIn = require('../internals/define-built-in');\n\nmodule.exports = function (target, src, options) {\n  for (var key in src) defineBuiltIn(target, key, src[key], options);\n  return target;\n};\n","'use strict';\n// `GetIteratorDirect(obj)` abstract operation\n// https://tc39.es/proposal-iterator-helpers/#sec-getiteratordirect\nmodule.exports = function (obj) {\n  return {\n    iterator: obj,\n    next: obj.next,\n    done: false\n  };\n};\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n","'use strict';\nvar call = require('../internals/function-call');\nvar anObject = require('../internals/an-object');\nvar getMethod = require('../internals/get-method');\n\nmodule.exports = function (iterator, kind, value) {\n  var innerResult, innerError;\n  anObject(iterator);\n  try {\n    innerResult = getMethod(iterator, 'return');\n    if (!innerResult) {\n      if (kind === 'throw') throw value;\n      return value;\n    }\n    innerResult = call(innerResult, iterator);\n  } catch (error) {\n    innerError = true;\n    innerResult = error;\n  }\n  if (kind === 'throw') throw value;\n  if (innerError) throw innerResult;\n  anObject(innerResult);\n  return value;\n};\n","'use strict';\nvar call = require('../internals/function-call');\nvar create = require('../internals/object-create');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar defineBuiltIns = require('../internals/define-built-ins');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar InternalStateModule = require('../internals/internal-state');\nvar getMethod = require('../internals/get-method');\nvar IteratorPrototype = require('../internals/iterators-core').IteratorPrototype;\nvar createIterResultObject = require('../internals/create-iter-result-object');\nvar iteratorClose = require('../internals/iterator-close');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar ITERATOR_HELPER = 'IteratorHelper';\nvar WRAP_FOR_VALID_ITERATOR = 'WrapForValidIterator';\nvar setInternalState = InternalStateModule.set;\n\nvar createIteratorProxyPrototype = function (IS_ITERATOR) {\n  var getInternalState = InternalStateModule.getterFor(IS_ITERATOR ? WRAP_FOR_VALID_ITERATOR : ITERATOR_HELPER);\n\n  return defineBuiltIns(create(IteratorPrototype), {\n    next: function next() {\n      var state = getInternalState(this);\n      // for simplification:\n      //   for `%WrapForValidIteratorPrototype%.next` or with `state.returnHandlerResult` our `nextHandler` returns `IterResultObject`\n      //   for `%IteratorHelperPrototype%.next` - just a value\n      if (IS_ITERATOR) return state.nextHandler();\n      if (state.done) return createIterResultObject(undefined, true);\n      try {\n        var result = state.nextHandler();\n        return state.returnHandlerResult ? result : createIterResultObject(result, state.done);\n      } catch (error) {\n        state.done = true;\n        throw error;\n      }\n    },\n    'return': function () {\n      var state = getInternalState(this);\n      var iterator = state.iterator;\n      state.done = true;\n      if (IS_ITERATOR) {\n        var returnMethod = getMethod(iterator, 'return');\n        return returnMethod ? call(returnMethod, iterator) : createIterResultObject(undefined, true);\n      }\n      if (state.inner) try {\n        iteratorClose(state.inner.iterator, 'normal');\n      } catch (error) {\n        return iteratorClose(iterator, 'throw', error);\n      }\n      if (iterator) iteratorClose(iterator, 'normal');\n      return createIterResultObject(undefined, true);\n    }\n  });\n};\n\nvar WrapForValidIteratorPrototype = createIteratorProxyPrototype(true);\nvar IteratorHelperPrototype = createIteratorProxyPrototype(false);\n\ncreateNonEnumerableProperty(IteratorHelperPrototype, TO_STRING_TAG, 'Iterator Helper');\n\nmodule.exports = function (nextHandler, IS_ITERATOR, RETURN_HANDLER_RESULT) {\n  var IteratorProxy = function Iterator(record, state) {\n    if (state) {\n      state.iterator = record.iterator;\n      state.next = record.next;\n    } else state = record;\n    state.type = IS_ITERATOR ? WRAP_FOR_VALID_ITERATOR : ITERATOR_HELPER;\n    state.returnHandlerResult = !!RETURN_HANDLER_RESULT;\n    state.nextHandler = nextHandler;\n    state.counter = 0;\n    state.done = false;\n    setInternalState(this, state);\n  };\n\n  IteratorProxy.prototype = IS_ITERATOR ? WrapForValidIteratorPrototype : IteratorHelperPrototype;\n\n  return IteratorProxy;\n};\n","'use strict';\nvar call = require('../internals/function-call');\nvar aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\nvar getIteratorDirect = require('../internals/get-iterator-direct');\nvar createIteratorProxy = require('../internals/iterator-create-proxy');\nvar callWithSafeIterationClosing = require('../internals/call-with-safe-iteration-closing');\n\nvar IteratorProxy = createIteratorProxy(function () {\n  var iterator = this.iterator;\n  var result = anObject(call(this.next, iterator));\n  var done = this.done = !!result.done;\n  if (!done) return callWithSafeIterationClosing(iterator, this.mapper, [result.value, this.counter++], true);\n});\n\n// `Iterator.prototype.map` method\n// https://github.com/tc39/proposal-iterator-helpers\nmodule.exports = function map(mapper) {\n  anObject(this);\n  aCallable(mapper);\n  return new IteratorProxy(getIteratorDirect(this), {\n    mapper: mapper\n  });\n};\n","'use strict';\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\nvar create = require('../internals/object-create');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar BUGGY_SAFARI_ITERATORS = false;\n\n// `%IteratorPrototype%` object\n// https://tc39.es/ecma262/#sec-%iteratorprototype%-object\nvar IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;\n\n/* eslint-disable es/no-array-prototype-keys -- safe */\nif ([].keys) {\n  arrayIterator = [].keys();\n  // Safari 8 has buggy iterators w/o `next`\n  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;\n  else {\n    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));\n    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;\n  }\n}\n\nvar NEW_ITERATOR_PROTOTYPE = !isObject(IteratorPrototype) || fails(function () {\n  var test = {};\n  // FF44- legacy iterators case\n  return IteratorPrototype[ITERATOR].call(test) !== test;\n});\n\nif (NEW_ITERATOR_PROTOTYPE) IteratorPrototype = {};\nelse if (IS_PURE) IteratorPrototype = create(IteratorPrototype);\n\n// `%IteratorPrototype%[@@iterator]()` method\n// https://tc39.es/ecma262/#sec-%iteratorprototype%-@@iterator\nif (!isCallable(IteratorPrototype[ITERATOR])) {\n  defineBuiltIn(IteratorPrototype, ITERATOR, function () {\n    return this;\n  });\n}\n\nmodule.exports = {\n  IteratorPrototype: IteratorPrototype,\n  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS\n};\n","'use strict';\n/* global ActiveXObject -- old IE, WSH */\nvar anObject = require('../internals/an-object');\nvar definePropertiesModule = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\n\nvar GT = '>';\nvar LT = '<';\nvar PROTOTYPE = 'prototype';\nvar SCRIPT = 'script';\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar EmptyConstructor = function () { /* empty */ };\n\nvar scriptTag = function (content) {\n  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n};\n\n// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n  activeXDocument.write(scriptTag(''));\n  activeXDocument.close();\n  var temp = activeXDocument.parentWindow.Object;\n  // eslint-disable-next-line no-useless-assignment -- avoid memory leak\n  activeXDocument = null;\n  return temp;\n};\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar NullProtoObjectViaIFrame = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var JS = 'java' + SCRIPT + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  // https://github.com/zloirock/core-js/issues/475\n  iframe.src = String(JS);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(scriptTag('document.F=Object'));\n  iframeDocument.close();\n  return iframeDocument.F;\n};\n\n// Check for document.domain and active x support\n// No need to use active x approach when document.domain is not set\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n// avoid IE GC bug\nvar activeXDocument;\nvar NullProtoObject = function () {\n  try {\n    activeXDocument = new ActiveXObject('htmlfile');\n  } catch (error) { /* ignore */ }\n  NullProtoObject = typeof document != 'undefined'\n    ? document.domain && activeXDocument\n      ? NullProtoObjectViaActiveX(activeXDocument) // old IE\n      : NullProtoObjectViaIFrame()\n    : NullProtoObjectViaActiveX(activeXDocument); // WSH\n  var length = enumBugKeys.length;\n  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n  return NullProtoObject();\n};\n\nhiddenKeys[IE_PROTO] = true;\n\n// `Object.create` method\n// https://tc39.es/ecma262/#sec-object.create\n// eslint-disable-next-line es/no-object-create -- safe\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    EmptyConstructor[PROTOTYPE] = anObject(O);\n    result = new EmptyConstructor();\n    EmptyConstructor[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = NullProtoObject();\n  return Properties === undefined ? result : definePropertiesModule.f(result, Properties);\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar V8_PROTOTYPE_DEFINE_BUG = require('../internals/v8-prototype-define-bug');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.es/ecma262/#sec-object.defineproperties\n// eslint-disable-next-line es/no-object-defineproperties -- safe\nexports.f = DESCRIPTORS && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var props = toIndexedObject(Properties);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], props[key]);\n  return O;\n};\n","'use strict';\nvar hasOwn = require('../internals/has-own-property');\nvar isCallable = require('../internals/is-callable');\nvar toObject = require('../internals/to-object');\nvar sharedKey = require('../internals/shared-key');\nvar CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');\n\nvar IE_PROTO = sharedKey('IE_PROTO');\nvar $Object = Object;\nvar ObjectPrototype = $Object.prototype;\n\n// `Object.getPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.getprototypeof\n// eslint-disable-next-line es/no-object-getprototypeof -- safe\nmodule.exports = CORRECT_PROTOTYPE_GETTER ? $Object.getPrototypeOf : function (O) {\n  var object = toObject(O);\n  if (hasOwn(object, IE_PROTO)) return object[IE_PROTO];\n  var constructor = object.constructor;\n  if (isCallable(constructor) && object instanceof constructor) {\n    return constructor.prototype;\n  } return object instanceof $Object ? ObjectPrototype : null;\n};\n","'use strict';\nvar internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.es/ecma262/#sec-object.keys\n// eslint-disable-next-line es/no-object-keys -- safe\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar map = require('../internals/iterator-map');\nvar IS_PURE = require('../internals/is-pure');\n\n// `Iterator.prototype.map` method\n// https://tc39.es/ecma262/#sec-iterator.prototype.map\n$({ target: 'Iterator', proto: true, real: true, forced: IS_PURE }, {\n  map: map\n});\n","'use strict';\n// TODO: Remove from `core-js@4`\nrequire('../modules/es.iterator.map');\n","/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.7\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.7\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.7\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n"],"names":["anObject","iteratorClose","module","exports","iterator","fn","value","ENTRIES","error","fails","F","prototype","constructor","Object","getPrototypeOf","done","defineBuiltIn","target","src","options","key","obj","next","getBuiltIn","call","getMethod","kind","innerResult","innerError","create","createNonEnumerableProperty","defineBuiltIns","wellKnownSymbol","InternalStateModule","IteratorPrototype","createIterResultObject","TO_STRING_TAG","ITERATOR_HELPER","WRAP_FOR_VALID_ITERATOR","setInternalState","set","createIteratorProxyPrototype","IS_ITERATOR","getInternalState","getterFor","state","this","nextHandler","undefined","result","returnHandlerResult","returnMethod","inner","WrapForValidIteratorPrototype","IteratorHelperPrototype","RETURN_HANDLER_RESULT","IteratorProxy","record","type","counter","aCallable","getIteratorDirect","createIteratorProxy","callWithSafeIterationClosing","mapper","PrototypeOfArrayIteratorPrototype","arrayIterator","isCallable","isObject","IS_PURE","ITERATOR","BUGGY_SAFARI_ITERATORS","keys","NEW_ITERATOR_PROTOTYPE","test","activeXDocument","definePropertiesModule","enumBugKeys","hiddenKeys","html","documentCreateElement","sharedKey","GT","LT","PROTOTYPE","SCRIPT","IE_PROTO","EmptyConstructor","scriptTag","content","NullProtoObjectViaActiveX","write","close","temp","parentWindow","NullProtoObjectViaIFrame","iframeDocument","iframe","JS","style","display","appendChild","String","contentWindow","document","open","NullProtoObject","ActiveXObject","domain","length","O","Properties","f","DESCRIPTORS","V8_PROTOTYPE_DEFINE_BUG","definePropertyModule","toIndexedObject","objectKeys","defineProperties","props","index","hasOwn","toObject","CORRECT_PROTOTYPE_GETTER","$Object","ObjectPrototype","object","internalObjectKeys","$","map","proto","real","forced","round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","a","b","c","d","e","hex","h1","h2","eq","isShort","r","g","hexParse","str","ret","len","alpha","hexString","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","hueValue","rgb2hsl","range","calln","Array","isArray","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","tkeys","j","ok","nk","replace","parseInt","names","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","pow","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","assign","fromObject","input","functionParse","charAt","Color","_rgb","_valid","valid","mix","color","weight","c1","c2","w2","p","w1","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","noop","uid","id","isNullOrUndef","toString","slice","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","source","klen","isValidKey","indexOf","_merger","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","_splitKey","parts","split","part","push","_getKeyResolver","resolveObjectKey","resolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","_isClickEvent","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","roundedRange","niceRange","floor","fraction","niceFraction","_factorize","sqrt","sort","pop","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","unlistenArrayEvents","stub","splice","_arrayUnique","items","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","check","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","describe","_fallback","_indexable","_scriptable","name","properties","active","animation","resize","show","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","bottom","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","applyScaleDefaults","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","writable","local","appliers","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","line","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","getValue","Error","join","delete","createSubResolver","arr","filter","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","_isDomSupported","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","getSegment","segment","startBound","endBound","_boundSegment","prevValue","inside","subStart","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","_duration","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","rej","resolved","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","found","convertObjectDataToArray","vScale","iAxisKey","vAxisKey","adata","isStacked","stacked","getStackKey","indexScale","valueScale","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","shift","createDatasetContext","dataset","createDataContext","dataIndex","raw","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","computeMinSampleSize","curr","_length","updateMinAndPrev","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","grouped","_index_","_value_","super","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","currentParsed","iScaleValue","skipNull","find","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","BubbleController","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","animateRotate","animateScale","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","controllers","__proto__","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","defaultRoutes","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","lineJoin","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","containsColorsDefinition","containsDefaultColorsDefenitions","plugin_colors","forceOverride","_args","chartOptions","containsColorDefenition","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","parseFillOption","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","textDirection","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","xSet","xAverage","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","generateTicks","minExp","exp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","apexesInArea","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"sourceRoot":""}